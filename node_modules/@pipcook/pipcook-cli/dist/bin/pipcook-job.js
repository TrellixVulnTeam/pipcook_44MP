#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = __importDefault(require("commander"));
const job_1 = require("../service/job");
commander_1.default
    .command('list')
    .helpOption('--help', 'show help')
    .option('-h|--host-ip <ip>', 'the host ip of daemon')
    .option('-p|--port <port>', 'the port of daemon')
    .action(job_1.list)
    .description('list all jobs');
commander_1.default
    .command('run <pipeline>')
    .helpOption('--help', 'show help')
    .option('--tuna', 'use tuna mirror to install python packages')
    .option('--output <dir>', 'the output directory name', 'output')
    .option('-h|--host-ip <ip>', 'the host ip of daemon')
    .option('-p|--port <port>', 'the port of daemon')
    .action(job_1.runAndDownloadById)
    .description('run a job from a pipeline id');
commander_1.default
    .command('remove <id>')
    .helpOption('--help', 'show help')
    .option('-h|--host-ip <ip>', 'the host ip of daemon')
    .option('-p|--port <port>', 'the port of daemon')
    .action(job_1.remove)
    .description('remove all the jobs');
commander_1.default
    .command('log <job>')
    .helpOption('--help', 'show help')
    .option('-h|--host-ip <ip>', 'the host ip of daemon')
    .option('-p|--port <port>', 'the port of daemon')
    .action(job_1.log)
    .description('show logs by the given job id');
commander_1.default
    .command('stop <job>').alias('cancel')
    .helpOption('--help', 'show help')
    .option('-h|--host-ip <ip>', 'the host ip of daemon')
    .option('-p|--port <port>', 'the port of daemon')
    .action(job_1.stop)
    .description('stop job by the given job id');
commander_1.default.parse(process.argv);
//# sourceMappingURL=pipcook-job.js.map