import { Job } from './job';
import { Pipeline } from './pipeline';
import { Plugin } from './plugin';
import { VersionsResp, ConfigResp } from './interface';
export { JobStatusValue, PluginStatusValue } from './utils';
export * from './interface';
/**
 * The Pipcook client to connect specific daemon endpoint.
 *
 * @example
 * ```js
 * const client = new PipcookClient();
 * const pipelines = await client.pipeline.list();
 * // [{ ...pipelines }]
 * ```
 */
export declare class PipcookClient {
    /**
     * The endpoint to Pipcook.
     */
    endpoint: string;
    /**
     * The pipeline management object.
     */
    pipeline: Pipeline;
    /**
     * The job management object.
     */
    job: Job;
    /**
     * The plugin manager object.
     */
    plugin: Plugin;
    /**
     * @param protocolWithHostname the daemon hostname with protocol, like "http://192.168.1.50"
     * @param port the port
     */
    constructor(protocolWithHostname?: string, port?: number);
    /**
     * list versions
     */
    listVersions(): Promise<VersionsResp>;
    /**
     * get daemon config
     */
    getConfig(): Promise<ConfigResp>;
}
