"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Job = void 0;
const request_1 = require("./request");
const base_1 = require("./base");
/**
 * Job API object.
 */
class Job extends base_1.BaseApi {
    /**
     * Use PipcookClient instead.
     * @private
     */
    constructor(url) {
        super(`${url}/job`);
        this.info = this.get;
    }
    /**
     * list all jobs.
     * @param filter the filter to list the jobs.
     * @returns The jobs list.
     */
    list(filter) {
        return request_1.get(this.route, filter);
    }
    /**
     * remove pipeline by id, if the id is undefined remove all
     * @param id pipline id or undefined
     */
    remove(id) {
        return request_1.del(`${this.route}/${id ? id : ''}`);
    }
    /**
     * get job info by job id
     * @param id job id
     */
    get(id) {
        return request_1.get(`${this.route}/${id}`);
    }
    /**
     * cancel job by id
     * @param id job id
     */
    cancel(id) {
        return request_1.post(`${this.route}/${id}/cancel`);
    }
    /**
     * get job log
     * @param id job id
     */
    log(id) {
        return request_1.get(`${this.route}/${id}/log`);
    }
    /**
     * start to run a pipeline by pipeline id
     * @param piplineId pipeline id
     */
    run(pipelineId) {
        return request_1.post(`${this.route}`, { pipelineId });
    }
    // TODO(feely): browser not working
    /**
     * download model by job id
     * you should check the job status before downloading
     * @param id job id
     */
    downloadOutput(id) {
        return request_1.getFile(`${this.route}/${id}/output`);
    }
    /**
     * generate the download url for given job id
     * @param id job id
     * @experimental
     */
    getOutputDownloadURL(id) {
        return `${this.route}/${id}/output`;
    }
}
exports.Job = Job;
//# sourceMappingURL=job.js.map